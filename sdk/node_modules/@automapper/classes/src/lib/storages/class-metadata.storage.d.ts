import type { Metadata, MetadataStorage } from '@automapper/core';
import type { Constructible } from '../types';
/**
 * Internal ClassMetadataStorage
 *
 * This is to store Metadata of all the models using ReflectMetadata
 * Not test due to private
 *
 * @private
 */
export declare class ClassMetadataStorage implements MetadataStorage<Constructible> {
    private storage;
    getMetadata(model: Constructible): Array<Metadata<Constructible>>;
    getMetadataForKey(model: Constructible, key: string[]): Metadata<Constructible> | undefined;
    addMetadata(model: Constructible, metadata: Metadata<Constructible>): void;
    has(metaKey: Constructible): boolean;
    dispose(): void;
}
