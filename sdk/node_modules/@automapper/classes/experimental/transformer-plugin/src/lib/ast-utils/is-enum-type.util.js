"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNumberEnum = exports.isStringEnum = exports.isEnumType = void 0;
const tss = require("typescript/lib/tsserverlibrary");
const has_flag_util_1 = require("./has-flag.util");
function isEnumType(type) {
    if ((0, has_flag_util_1.hasFlag)(type, tss.TypeFlags.Enum)) {
        return true;
    }
    if ((0, has_flag_util_1.hasFlag)(type, tss.TypeFlags.EnumLiteral) && !type.isUnion())
        return false;
    const symbol = type.getSymbol();
    if (symbol == null) {
        return false;
    }
    const { valueDeclaration } = symbol;
    return (valueDeclaration != null &&
        valueDeclaration.kind === tss.SyntaxKind.EnumDeclaration);
}
exports.isEnumType = isEnumType;
function isStringEnum(type) {
    var _a, _b;
    const isEnum = isEnumType(type);
    const valueDeclaration = (_a = type.getSymbol()) === null || _a === void 0 ? void 0 : _a.valueDeclaration;
    return ((isEnum &&
        ((_b = valueDeclaration === null || valueDeclaration === void 0 ? void 0 : valueDeclaration.members) === null || _b === void 0 ? void 0 : _b.some((member) => member.initializer != null))) ||
        false);
}
exports.isStringEnum = isStringEnum;
function isNumberEnum(type) {
    var _a, _b;
    const isEnum = isEnumType(type);
    const valueDeclaration = (_a = type.getSymbol()) === null || _a === void 0 ? void 0 : _a.valueDeclaration;
    return ((isEnum &&
        ((_b = valueDeclaration === null || valueDeclaration === void 0 ? void 0 : valueDeclaration.members) === null || _b === void 0 ? void 0 : _b.some((member) => member.initializer == null))) ||
        false);
}
exports.isNumberEnum = isNumberEnum;
//# sourceMappingURL=is-enum-type.util.js.map