"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTypeReferenceAsString = exports.getDecoratorOrUndefinedByNames = void 0;
const ast_utils_1 = require("../ast-utils");
function getDecoratorOrUndefinedByNames(names, factory, decorators) {
    return (decorators || factory.createNodeArray()).find((item) => names.includes((0, ast_utils_1.getDecoratorName)(item)));
}
exports.getDecoratorOrUndefinedByNames = getDecoratorOrUndefinedByNames;
function getTypeReferenceAsString(type, typeChecker) {
    if ((0, ast_utils_1.isArrayType)(type)) {
        const [arrayType] = type.typeArguments;
        const elementType = getTypeReferenceAsString(arrayType, typeChecker);
        return !elementType ? undefined : elementType;
    }
    if ((0, ast_utils_1.isBoolean)(type)) {
        return Boolean.name;
    }
    if ((0, ast_utils_1.isNumber)(type) || (0, ast_utils_1.isNumberEnum)(type)) {
        return Number.name;
    }
    if ((0, ast_utils_1.isString)(type) || (0, ast_utils_1.isStringEnum)(type)) {
        return String.name;
    }
    if ((0, ast_utils_1.isDate)(type)) {
        return Date.name;
    }
    if (type.isClass()) {
        return (0, ast_utils_1.getText)(type, typeChecker);
    }
    return undefined;
}
exports.getTypeReferenceAsString = getTypeReferenceAsString;
//# sourceMappingURL=get.util.js.map