"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyTypeConverters = void 0;
/**
 *
 * Apply converters if available to mapInitialize on createMap
 *
 * @param mapping
 * @param typeConverters
 */
function applyTypeConverters(mapping, typeConverters) {
    var _a;
    const [, , initializedProps] = mapping;
    for (let i = 0, initializedPropsLen = initializedProps.length; i < initializedPropsLen; i++) {
        const initializeProp = initializedProps[i];
        if (initializeProp == null ||
            initializeProp[2 /* nestedMappingPair */] == null)
            continue;
        const [destinationType, sourceType] = initializeProp[2 /* nestedMappingPair */];
        const typeConverter = (_a = typeConverters
            .get(sourceType)) === null || _a === void 0 ? void 0 : _a.get(destinationType);
        if (typeConverter) {
            const originalMapInitializeFn = initializeProp[1 /* property */][1 /* transformation */][0 /* memberMapFn */][1 /* fn */];
            initializeProp[1 /* property */][1 /* transformation */][0 /* memberMapFn */][1 /* fn */] = (source) => {
                if ('convert' in typeConverter) {
                    return typeConverter.convert(originalMapInitializeFn(source));
                }
                return typeConverter(originalMapInitializeFn(source));
            };
        }
    }
}
exports.applyTypeConverters = applyTypeConverters;
//# sourceMappingURL=apply-type-converters.util.js.map